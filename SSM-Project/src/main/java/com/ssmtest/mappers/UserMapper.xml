<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssmtest.dao.UserDao">
	<!-- 先定义一个Interface，UserMapper，然后Mapper文件的namespace指向的就是这个Interface， UserInterface里定义的方法和UserMapper.xml文件中的一样, 
		然后代码里直接使用接口 -->
	<resultMap id="BaseResultMap" type="com.ssmtest.entity.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="roleName" property="rolename" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, userName, password, email, phone, roleName
	</sql>

	<!--根据主键查询一条用户数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from tb_user
		where id = #{id,jdbcType=INTEGER}
	</select>

	<!--用户登录 -->
	<select id="loginByUserNameAndPassword"  resultMap="BaseResultMap" parameterType="com.ssmtest.entity.User">
		select 
		<include refid="Base_Column_List" />
		 from tb_user 
		 where 
		 userName = #{username} 
		 and password = #{password} 
	</select>
	
	<!-- 根据分页数据start 和size查询数据 -->
	<select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_user
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>

	<!--查询所有用户数据 -->
	<select id="selectUserList" resultType="com.ssmtest.entity.User">
		select
		<include refid="Base_Column_List" />
		from tb_user
	</select>

	<!-- 查询用户记录总数 -->
	<select id="selectCount" resultType="int">
		select count(*) from tb_user
	</select>

	<!--根据主键删除一条用户数据 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_user
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!--插入一条完整用户数据 -->
	<insert id="insert" parameterType="com.ssmtest.entity.User">
		insert into tb_user (id, userName, password,
		email, phone, roleName
		)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}
		)
	</insert>

	<!--插入一条用户数据 ，可以不完整 -->
	<insert id="insertSelective" parameterType="com.ssmtest.entity.User">
		insert into tb_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				userName,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="rolename != null">
				roleName,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="rolename != null">
				#{rolename,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<!--根据主键更新一条用户数据，可以不完整 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.ssmtest.entity.User">
		update tb_user
		<set>
			<if test="username != null">
				userName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="rolename != null">
				roleName = #{rolename,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--根据主键更新一条用户数据 -->
	<update id="updateByPrimaryKey" parameterType="com.ssmtest.entity.User">
		update tb_user
		set userName = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		roleName = #{rolename,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>